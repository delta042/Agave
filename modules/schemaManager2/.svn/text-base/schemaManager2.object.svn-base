<?php
class schemaManager2 {
	private $entity, $entityKey;
	private $matchFields = array();
	private $schema;
	private $values;
	
	public function __construct() {
		global $agave;
		$this->agave = $agave;
	}
	
	public function __destruct() {}
	
	public function setEntity($entity) {
		$this->entity = $entity;
	}
	
	public function setEntityKey($key) {
		$this->entityKey = $key;
	}
	
	public function addMatchField($matchField) {
		$this->matchFields[] = $matchField;
	}

	public function populate($collapse=FALSE) {
		$this->querySchema($collapse);
		if(isset($this->entityKey)) $this->queryValues($collapse);
	}

	//match fields and values based on name, gotta
	private function querySchema($collapse=FALSE) {
		$fields = array();
		foreach($this->matchFields as $entity_type) {
			$query = "SELECT * FROM `schema_fields` WHERE `entity`='$this->entity' AND `entity_type`='$entity_type'";
			$fields[$entity_type] = $this->agave->doSQLQuery($query, 3);
		}
		if(!empty($fields)) $this->schema = ($collapse || count($fields)<=1) ? $this->collapseData($fields) : $fields;
		else $this->schema = FALSE;
	}
	
	private function queryValues($collapse=FALSE) {
		$values = array();
		foreach($this->matchFields as $entity_type) {
			$table = "schema_values_".$this->entity."_".$entity_type;
			$query = "SELECT * FROM `$table` WHERE `entityKey`='$this->entityKey'";
			$values[$this->entity_type] = $this->agave->doSQLQuery($query, 2);
		}
		if(!empty($values)) $this->values = ($collapse || count($values)<=1) ? $this->collapseData($values) : $values;
		else $this->values = FALSE;
	}
		
	private function collapseData($dataSet) {
		$newData = array();
		foreach($dataSet as $key=>$data) {
			foreach($data as $field=>$value) {
				$newData[$field] = $value;
			}
		}
		return $newData;
	}
	
	public function returnElements($matchField=NULL) {
		//make sure this is taking into account multi-matchfields AND collapsed structure
		if(!empty($this->schema)) {
			$elements = array();
			if($matchField || count($this->matchFields==1))
			foreach($this->schema as $field) {
				$element = array();
				//unpack settings field
				$field['widget_settings'] = unserialize($field['widget_settings']);
				if($field['widget_settings']) {
					foreach($field['widget_settings'] as $key=>$value) {
						$element[$key] = $value;
					}
				}
			
				//add properties from schema table
				$element['type'] = $field['widget_type'];
				$element['name'] = $field['field_name'];
				$element['label'] = $field['label'];
				$element['weight'] = $field['weight'];
				$element['access'] = $field['access'];
				$element['help'] = $field['widget_help'];

				$element['default'] = (!empty($this->values[$field['name']])) ? $this->values[$field['name']] : NULL;
				$elements[] = $element;
			}
			return $elements;
		}
	}
	
	public function displayField($field) {
		//load fieldManager to show field
	}
	
	public function displaySchema($matchField=NULL) {

	}
}// end schemaManager2